{"ast":null,"code":"var _jsxFileName = \"D:\\\\hoc\\\\chuyen de 1\\\\admin\\\\frontend\\\\admin-panel\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login as apiLogin, checkAuth } from '../services/api';\nimport { useSnackbar } from 'notistack';\n\n// Định nghĩa kiểu dữ liệu cho context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Tạo context\nconst AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  admin: null,\n  login: async () => {},\n  logout: () => {},\n  loading: true\n});\n\n// Hook để sử dụng context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  // Kiểm tra xem đã đăng nhập chưa\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      const token = localStorage.getItem('token');\n      const adminData = localStorage.getItem('admin');\n      if (token && adminData) {\n        try {\n          // Kiểm tra token có hợp lệ không bằng cách gọi API\n          const response = await checkAuth();\n          if (response.status === 200) {\n            setAdmin(JSON.parse(adminData));\n          } else {\n            throw new Error('Token không hợp lệ');\n          }\n        } catch (error) {\n          console.error('Lỗi xác thực:', error);\n          // Token không hợp lệ hoặc có lỗi, xóa token và thông tin admin\n          localStorage.removeItem('token');\n          localStorage.removeItem('admin');\n          setAdmin(null);\n          navigate('/login');\n          enqueueSnackbar('Phiên đăng nhập hết hạn, vui lòng đăng nhập lại', {\n            variant: 'warning'\n          });\n        }\n      }\n      setLoading(false);\n    };\n    checkAuthentication();\n  }, [navigate, enqueueSnackbar]);\n\n  // Hàm đăng nhập\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await apiLogin(credentials);\n      const {\n        token,\n        admin\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('admin', JSON.stringify(admin));\n      setAdmin(admin);\n      navigate('/dashboard');\n      enqueueSnackbar('Đăng nhập thành công!', {\n        variant: 'success'\n      });\n    } catch (error) {\n      console.error('Lỗi đăng nhập:', error);\n      enqueueSnackbar('Đăng nhập thất bại. Vui lòng kiểm tra tên đăng nhập và mật khẩu.', {\n        variant: 'error'\n      });\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Hàm đăng xuất\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('admin');\n    setAdmin(null);\n    navigate('/login');\n    enqueueSnackbar('Đăng xuất thành công!', {\n      variant: 'info'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!admin,\n      admin,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"7FUsZNyyGuKe36AODJT71CXneqg=\", false, function () {\n  return [useNavigate, useSnackbar];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","login","apiLogin","checkAuth","useSnackbar","jsxDEV","_jsxDEV","AuthContext","isAuthenticated","admin","logout","loading","useAuth","_s","AuthProvider","children","_s2","setAdmin","setLoading","navigate","enqueueSnackbar","checkAuthentication","token","localStorage","getItem","adminData","response","status","JSON","parse","Error","error","console","removeItem","variant","credentials","data","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/hoc/chuyen de 1/admin/frontend/admin-panel/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login as apiLogin, checkAuth } from '../services/api';\r\nimport { Admin, LoginRequest } from '../types';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n// Định nghĩa kiểu dữ liệu cho context\r\ninterface AuthContextType {\r\n    isAuthenticated: boolean;\r\n    admin: Admin | null;\r\n    login: (credentials: LoginRequest) => Promise<void>;\r\n    logout: () => void;\r\n    loading: boolean;\r\n}\r\n\r\n// Tạo context\r\nconst AuthContext = createContext<AuthContextType>({\r\n    isAuthenticated: false,\r\n    admin: null,\r\n    login: async () => {},\r\n    logout: () => {},\r\n    loading: true\r\n});\r\n\r\n// Hook để sử dụng context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Provider component\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [admin, setAdmin] = useState<Admin | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // Kiểm tra xem đã đăng nhập chưa\r\n    useEffect(() => {\r\n        const checkAuthentication = async () => {\r\n            const token = localStorage.getItem('token');\r\n            const adminData = localStorage.getItem('admin');\r\n            \r\n            if (token && adminData) {\r\n                try {\r\n                    // Kiểm tra token có hợp lệ không bằng cách gọi API\r\n                    const response = await checkAuth();\r\n                    \r\n                    if (response.status === 200) {\r\n                        setAdmin(JSON.parse(adminData));\r\n                    } else {\r\n                        throw new Error('Token không hợp lệ');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Lỗi xác thực:', error);\r\n                    // Token không hợp lệ hoặc có lỗi, xóa token và thông tin admin\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('admin');\r\n                    setAdmin(null);\r\n                    navigate('/login');\r\n                    enqueueSnackbar('Phiên đăng nhập hết hạn, vui lòng đăng nhập lại', { \r\n                        variant: 'warning' \r\n                    });\r\n                }\r\n            }\r\n            \r\n            setLoading(false);\r\n        };\r\n        \r\n        checkAuthentication();\r\n    }, [navigate, enqueueSnackbar]);\r\n\r\n    // Hàm đăng nhập\r\n    const login = async (credentials: LoginRequest) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await apiLogin(credentials);\r\n            const { token, admin } = response.data;\r\n            \r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('admin', JSON.stringify(admin));\r\n            \r\n            setAdmin(admin);\r\n            navigate('/dashboard');\r\n            \r\n            enqueueSnackbar('Đăng nhập thành công!', { \r\n                variant: 'success' \r\n            });\r\n        } catch (error) {\r\n            console.error('Lỗi đăng nhập:', error);\r\n            enqueueSnackbar('Đăng nhập thất bại. Vui lòng kiểm tra tên đăng nhập và mật khẩu.', { \r\n                variant: 'error' \r\n            });\r\n            throw error;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Hàm đăng xuất\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('admin');\r\n        setAdmin(null);\r\n        navigate('/login');\r\n        enqueueSnackbar('Đăng xuất thành công!', { \r\n            variant: 'info' \r\n        });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            isAuthenticated: !!admin,\r\n            admin,\r\n            login,\r\n            logout,\r\n            loading\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}