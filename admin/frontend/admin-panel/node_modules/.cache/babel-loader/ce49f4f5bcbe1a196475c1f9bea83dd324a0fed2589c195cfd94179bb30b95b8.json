{"ast":null,"code":"var _jsxFileName = \"D:\\\\hoc\\\\chuyen de 1\\\\admin\\\\frontend\\\\admin-panel\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login as apiLogin } from '../services/api';\n\n// Định nghĩa kiểu dữ liệu cho context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Tạo context\nconst AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  admin: null,\n  login: async () => {},\n  logout: () => {},\n  loading: true\n});\n\n// Hook để sử dụng context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Kiểm tra xem đã đăng nhập chưa\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      const adminData = localStorage.getItem('admin');\n      if (token && adminData) {\n        try {\n          setAdmin(JSON.parse(adminData));\n        } catch (error) {\n          console.error('Error parsing admin data', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('admin');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Hàm đăng nhập\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await apiLogin(credentials);\n      const {\n        token,\n        admin\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('admin', JSON.stringify(admin));\n      setAdmin(admin);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Hàm đăng xuất\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('admin');\n    setAdmin(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!admin,\n      admin,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"cKNjZT9meVEdbQyPrJDseuThh84=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","login","apiLogin","jsxDEV","_jsxDEV","AuthContext","isAuthenticated","admin","logout","loading","useAuth","_s","AuthProvider","children","_s2","setAdmin","setLoading","navigate","checkAuth","token","localStorage","getItem","adminData","JSON","parse","error","console","removeItem","credentials","response","data","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/hoc/chuyen de 1/admin/frontend/admin-panel/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login as apiLogin } from '../services/api';\r\nimport { Admin, LoginRequest } from '../types';\r\n\r\n// Định nghĩa kiểu dữ liệu cho context\r\ninterface AuthContextType {\r\n    isAuthenticated: boolean;\r\n    admin: Admin | null;\r\n    login: (credentials: LoginRequest) => Promise<void>;\r\n    logout: () => void;\r\n    loading: boolean;\r\n}\r\n\r\n// Tạo context\r\nconst AuthContext = createContext<AuthContextType>({\r\n    isAuthenticated: false,\r\n    admin: null,\r\n    login: async () => {},\r\n    logout: () => {},\r\n    loading: true\r\n});\r\n\r\n// Hook để sử dụng context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Provider component\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n    const [admin, setAdmin] = useState<Admin | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    // Kiểm tra xem đã đăng nhập chưa\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            const token = localStorage.getItem('token');\r\n            const adminData = localStorage.getItem('admin');\r\n            \r\n            if (token && adminData) {\r\n                try {\r\n                    setAdmin(JSON.parse(adminData));\r\n                } catch (error) {\r\n                    console.error('Error parsing admin data', error);\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('admin');\r\n                }\r\n            }\r\n            \r\n            setLoading(false);\r\n        };\r\n        \r\n        checkAuth();\r\n    }, []);\r\n\r\n    // Hàm đăng nhập\r\n    const login = async (credentials: LoginRequest) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await apiLogin(credentials);\r\n            const { token, admin } = response.data;\r\n            \r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('admin', JSON.stringify(admin));\r\n            \r\n            setAdmin(admin);\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            console.error('Login error', error);\r\n            throw error;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Hàm đăng xuất\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('admin');\r\n        setAdmin(null);\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            isAuthenticated: !!admin,\r\n            admin,\r\n            login,\r\n            logout,\r\n            loading\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}